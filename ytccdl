#!/bin/bash

# 1. Request YouTube link
read -p "Please enter the YouTube link: " youtube_link

# Use youtube-dl to list all available cc subtitles
echo "Retrieving available cc subtitles..."
youtube-dl --list-subs "$youtube_link"

# 2. Ask the user to choose the cc subtitle language
read -p "Please enter the cc subtitle language code you want to download: " cc_lang

# Download cc subtitles
youtube-dl --write-sub --sub-lang "$cc_lang" --skip-download "$youtube_link" > /dev/null 2>&1

# 3. Find all vtt files in the directory
vtt_files=($(ls *.vtt))
num_files=${#vtt_files[@]}

# 4. Decide the next steps based on the number of vtt files
if [ "$num_files" -eq 1 ]; then
    vtt_file="${vtt_files[0]}"
    echo "Only one vtt file found, it will be used directly."
else
    echo "Multiple vtt files found:"
    for i in "${!vtt_files[@]}"; do
        echo "$((i+1))) ${vtt_files[$i]}"
    done
    read -p "Please choose the file number to convert: " file_choice
    vtt_file="${vtt_files[$((file_choice-1))]}"
fi
ffmpeg -i $vtt_file tmp.srt > /dev/null 2>&1
rm -f $vtt_file

# Convert the chosen srt file to txt
srt2text tmp.srt > tmp.txt
rm -f tmp.srt

# 5. Check if conversion from Simplified to Traditional Chinese is needed
if [[ "$cc_lang" == "zh" || "$cc_lang" == "zh-Hans" ]]; then
    read -p "Do you want to convert the subtitles from Simplified Chinese to Traditional Chinese? (y/n): " convert_choice
    if [[ "$convert_choice" == "y" ]]; then
        opencc -i tmp.txt -o tmp_zhtw.txt
	mv tmp_zhtw.txt tmp.txt
        echo "Simplified Chinese has been converted to Traditional Chinese."
    else
        echo "Keeping the subtitles in the original language."
    fi
else
    echo "The chosen subtitle language does not require conversion."
fi

echo "==="
python3 -m pangu -f tmp.txt
echo "==="
rm -f tmp.txt
